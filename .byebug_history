exit
filter_value
parsed_data.filter {|item| partial_match?(item[filter_key.to_sym], filter_value)  }
filter_key
exit
filter_value
filter_key
exit
'test test'.capitalize
[].empty?
[].blank?
[].present?
unique_results.values.flatten
unique_results.values
unique_results
duplicate_result_based_from_email
exit
pp parsed_data.group_by {|i| i[:email]}
ap parsed_data.group_by {|i| i[:email]}
parsed_data.group_by {|i| i[:email]}
parsed_data
parsed_data.filter {|i| i[:full_name].include?('John')}
exit
parsed_data.filter{|i| i[:name].downcase.include?('john')}
parsed_data.filter{|i| i[::name].downcase.include?('john')}
parsed_data
filter_value
filter_key
